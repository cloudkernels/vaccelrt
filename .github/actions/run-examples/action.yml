name: Run Examples
description: Run vaccelrt examples

inputs:
  prefix:
    default: ${{ github.workspace }}/opt
  valgrind:
    default: 'false'

runs:
  using: composite
  steps:
    - name: Set environment variables
      run: |
        MULTIARCH_TRIPLET=$(dpkg-architecture -qDEB_HOST_MULTIARCH)
        INSTALL_LIB_DIR=${{ inputs.prefix }}/lib/${MULTIARCH_TRIPLET}
        echo "INSTALL_LIB_DIR=${INSTALL_LIB_DIR}" >> "$GITHUB_ENV"
        LD_LIBRARY_PATH=${INSTALL_LIB_DIR}
        echo "LD_LIBRARY_PATH=${LD_LIBRARY_PATH}" >> "$GITHUB_ENV"
        echo "VACCEL_DEBUG_LEVEL=4" >> "$GITHUB_ENV"
        if [ "${{ inputs.valgrind }}" == "true" ]; then
          VALGRIND_CMD="valgrind"
          VALGRIND_CMD+=" --leak-check=full --show-leak-kinds=all"
          VALGRIND_CMD+=" --track-origins=yes --errors-for-leak-kinds=all"
          VALGRIND_CMD+=" --max-stackframe=3145916 --error-exitcode=1"
          echo "VALGRIND_CMD=${VALGRIND_CMD}" >> "$GITHUB_ENV"
        fi
      shell: bash

    - name: Run examples (noop)
      run: |
        export VACCEL_BACKENDS=${INSTALL_LIB_DIR}/libvaccel-noop.so
        echo "Run examples with plugin '${VACCEL_BACKENDS}'" 
        cd ${{ inputs.prefix }} || exit 1
        set -x
        $VALGRIND_CMD ./bin/classify share/vaccel/images/example.jpg 1
        $VALGRIND_CMD ./bin/classify_generic share/vaccel/images/example.jpg 1
        $VALGRIND_CMD ./bin/detect share/vaccel/images/example.jpg 1
        $VALGRIND_CMD ./bin/detect_generic share/vaccel/images/example.jpg 1
        $VALGRIND_CMD ./bin/pose share/vaccel/images/example.jpg 1
        $VALGRIND_CMD ./bin/pose_generic share/vaccel/images/example.jpg 1
        $VALGRIND_CMD ./bin/segment share/vaccel/images/example.jpg 1
        $VALGRIND_CMD ./bin/segment_generic share/vaccel/images/example.jpg 1
        $VALGRIND_CMD ./bin/depth share/vaccel/images/example.jpg 1
        $VALGRIND_CMD ./bin/depth_generic share/vaccel/images/example.jpg 1
        $VALGRIND_CMD ./bin/sgemm
        $VALGRIND_CMD ./bin/sgemm_generic
        $VALGRIND_CMD ./bin/minmax 262144 \
          share/vaccel/input/input_262144.csv 5 100
        $VALGRIND_CMD ./bin/minmax_generic 262144 \
          share/vaccel/input/input_262144.csv 5 100
        $VALGRIND_CMD ./bin/pynq_vector_add
        $VALGRIND_CMD ./bin/pynq_array_copy
        $VALGRIND_CMD ./bin/pynq_parallel
        $VALGRIND_CMD ./bin/single_model share/vaccel/models/tf/frozen_graph.pb
        $VALGRIND_CMD ./bin/tf_saved_model share/vaccel/models/tf/lstm2
        $VALGRIND_CMD ./bin/tf_inference share/vaccel/models/tf/lstm2
        $VALGRIND_CMD ./bin/tflite_inference share/vaccel/models/tf/lstm2.tflite
        $VALGRIND_CMD ./bin/torch_inference share/vaccel/images/example.jpg \
          share/vaccel/models/torch/cnn_trace.pt
        $VALGRIND_CMD ./bin/mbench 1 share/vaccel/images/example.jpg
        $VALGRIND_CMD ./bin/exec_with_res ${INSTALL_LIB_DIR}/libmytestlib.so 1
        $VALGRIND_CMD ./bin/exec_helpers ${INSTALL_LIB_DIR}/libmytestlib.so 1
        $VALGRIND_CMD ./bin/exec_helpers_nonser \
          ${INSTALL_LIB_DIR}/libmytestlib.so 1
      shell: bash

    - name: Run examples (exec)
      run: |
        export VACCEL_BACKENDS=${INSTALL_LIB_DIR}/libvaccel-exec.so
        export VACCEL_EXEC_DLCLOSE=1
        echo "Run examples with plugin '${VACCEL_BACKENDS}'" 
        cd ${{ inputs.prefix }} || exit 1
        set -x
        $VALGRIND_CMD ./bin/exec_with_res ${INSTALL_LIB_DIR}/libmytestlib.so 1
        $VALGRIND_CMD ./bin/exec_helpers ${INSTALL_LIB_DIR}/libmytestlib.so 1
        $VALGRIND_CMD ./bin/exec_helpers_nonser \
          ${INSTALL_LIB_DIR}/libmytestlib.so 1
      shell: bash
