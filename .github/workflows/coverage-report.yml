name: Coverage Report

on:
  workflow_call:
    inputs:
      runner:
        type: string
        default: '["gcc", "lite", "2204"]'
      runner-arch:
        type: string
        default: 'x86_64'
      options:
        type: string
        default: 'auto_features=enabled'
      plugin:
        type: string
        default: ''
      commit:
        type: boolean
        default: false
      comment-diff:
        type: boolean
        default: false
    secrets:
      GIT_CLONE_PAT:
        required: false

jobs:
  coverage_report:
    name: Coverage Report
    runs-on: [self-hosted, "${{ inputs.runner-arch }}", "${{ fromJSON(inputs.runner) }}"]
    permissions:
      contents: write
      pull-requests: write

    env:
      CC: gcc-12
      CXX: g++-12
    steps:
      - name: Checkout .github directory
        uses: actions/checkout@v4
        with:
          sparse-checkout: .github
          repository: ${{ (inputs.plugin != '' && 'nubificus/vaccel') || '' }}
          ref: ${{ (inputs.plugin != '' && 'main') || '' }}

      - name: Set repository directories
        id: set_repo_dirs
        run: |
          echo "repo=${{ github.event.repository.name }}" >> "$GITHUB_OUTPUT"
          echo "repo-default=${{ github.event.repository.name }}_${{ github.event.repository.default_branch }}" \
            >> "$GITHUB_OUTPUT"
        shell: bash

      - name: Initialize workspace
        uses: ./.github/actions/initialize-workspace
        with:
          remote-actions-repo: ${{ (inputs.plugin != '' && 'nubificus/vaccel') || '' }}
          token: ${{ secrets.GIT_CLONE_PAT || github.token }}
          dot-github-only: 'true'

      - name: Checkout current branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref || github.ref_name }}
          path: ${{ steps.set_repo_dirs.outputs.repo }}

      - name: Build project
        uses: ./.github/actions/build
        with:
          build-dir: build
          source-dir: ${{ steps.set_repo_dirs.outputs.repo }}
          coverage: 'true'
          options: ${{ inputs.options }}

      - name: Generate coverage report
        uses: ./.github/actions/run-tests
        with:
          build-dir: build
          source-dir: ${{ steps.set_repo_dirs.outputs.repo }}
          coverage: 'true'
          gcov: 'gcov-12'

      - name: Checkout default_branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.repository.default_branch }}
          path:  ${{ steps.set_repo_dirs.outputs.repo-default }}

      - name: Build project @default_branch
        if: ${{ inputs.comment-diff == true }}
        uses: ./.github/actions/build
        with:
          build-dir: build
          source-dir: ${{ steps.set_repo_dirs.outputs.repo-default }}
          coverage: 'true'
          options: ${{ inputs.options }}

      - name: Generate coverage report @default_branch
        if: ${{ inputs.comment-diff == true }}
        uses: ./.github/actions/run-tests
        with:
          build-dir: build
          source-dir: ${{ steps.set_repo_dirs.outputs.repo-default }}
          coverage: 'true'
          gcov: 'gcov-12'

      - name: Calculate coverage diff
        if: ${{ inputs.comment-diff == true }}
        run: |
          pycobertura diff \
            "$(find "${{ steps.set_repo_dirs.outputs.repo-default }}/build" -name "coverage*.xml")" \
            "$(find "${{ steps.set_repo_dirs.outputs.repo }}/build" -name "coverage*.xml")" \
            --no-color --no-source -f markdown > coverage_diff.txt  || PYCOB_RESULT="$?"
          echo "pycobertura exited with ${PYCOB_RESULT:-0}"
          [ "$PYCOB_RESULT" == 1 ] && exit 1

          echo -e '# Coverage report diff\n' > coverage_diff.md && \
            cat coverage_diff.txt >> coverage_diff.md
        shell: bash

      - name: PR comment with file
        if: ${{ inputs.comment-diff == true }}
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: ./coverage_diff.md
          comment_tag: coverage
          mode: recreate

      - name: Generate markdown file
        id: generate_md_file
        if: ${{ inputs.commit == true }}
        run: |
          COVERAGE_FILE="docs/coverage/src_coverage/coverage.md"
          pycobertura show \
            "$(find "${{ steps.set_repo_dirs.outputs.repo }}/build" -name "coverage*.xml")" \
            --format markdown --output "coverage.md"
          printf "%s\n\n" "# Tests coverage report" \
            > "${{ steps.set_repo_dirs.outputs.repo }}/$COVERAGE_FILE"
          cat coverage.md >> "${{ steps.set_repo_dirs.outputs.repo }}/$COVERAGE_FILE"
          rm -f coverage.md
          echo "coverage-file=${COVERAGE_FILE}" >> "$GITHUB_OUTPUT"
        shell: bash

      - name: Commit report
        if: ${{ inputs.commit == true }}
        uses: ./.github/actions/commit-file
        with:
          workdir: ${{ steps.set_repo_dirs.outputs.repo }} 
          branch: ${{ github.event.pull_request.head.ref || github.ref_name }} 
          file: ${{ steps.generate_md_file.outputs.coverage-file }}
          message: "docs(coverage): Update coverage report"

      - name: Clean-up
        if: ${{ always() }}
        run: |
          sudo rm -rf coverage* ${{ steps.set_repo_dirs.outputs.repo }} \
            ${{ steps.set_repo_dirs.outputs.repo-default }}
